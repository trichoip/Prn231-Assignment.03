@page
@model EStore.WebClient.Pages.Products.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                ProductId
            </th>
            <th>
                ProductName
            </th>
            <th>
                Weight
            </th>
            <th>
                UnitPrice
            </th>
            <th>
                UnitsInStock
            </th>
            <th>
                IsDeleted
            </th>
            <th>
                Category
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody id="productList">
    </tbody>
</table>

<script>
    getProducts();

    function deleteProduct(productId) {

        const isConfirmed = confirm('Are you sure you want to delete this product?');
        if (isConfirmed) {
            fetch(`https://localhost:7285/api/Products/${productId}`, {
                method: 'DELETE',
            })
                .then(response => {
                    if (response.ok) {
                        getProducts();
                    } else {
                        console.error('Error deleting product:', response.statusText);
                    }
                })
                .catch(error => console.error('Error deleting product:', error));
        }
    }

    function getProducts() {
        fetch('https://localhost:7285/api/Products')
            .then(response => response.json())
            .then(products => {
                const productListTableBody = document.getElementById('productList');
                productListTableBody.innerHTML = '';

                products.forEach(product => {
                    const productRow = document.createElement('tr');
                    productRow.innerHTML = `
                   <td>${product.productId}</td>
                   <td>${product.productName}</td>
                   <td>${product.weight}</td>
                   <td>${product.unitPrice}</td>
                   <td>${product.unitsInStock}</td>
                   <td>${product.isDeleted ? 'Yes' : 'No'}</td>
                   <td>${product.categoryId}</td>
                   <td>
                       <a href="/Products/Edit/${product.productId}">Edit</a> |
                       <td><button onclick="deleteProduct(${product.productId})">Delete</button></td>
                   </td>
               `;
                    productListTableBody.appendChild(productRow);
                });
            })
            .catch(error => console.error('Error fetching products:', error));
    }
</script>